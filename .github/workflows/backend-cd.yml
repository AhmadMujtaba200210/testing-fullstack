name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - "develop"
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456789
          POSTGRES_DB: customer
        ports:
          - "5433:5432"
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":github: https://github.com/AhmadMujtaba200210/testing-fullstack/commit/${{github.sha}} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message
        run: >
            curl -X POST -H 'Content-type: application/json' 
            --data '{"text":"Deployment started :progress_bar: :fingerscrossed:"}' 
            ${{ secrets.SLACK_WEBHOOK_URL }}
      


      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Set Up Java 17 :java:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT


      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -D docker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Build Completed Successfully :builder:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
          sed -i -E 's_(ahmadmujtaba200210/fullstack:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../Dockerrun.aws.json

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Updated Dockerrun.aws.json file with build number :docker:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}


      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json

      - name: Send Slack Message
        run: >
            curl -X POST -H 'Content-type: application/json' 
            --data '{"text":":githubloading: Committing to repo "}' 
            ${{ secrets.SLACK_WEBHOOK_URL }}


      - name: commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Commit and Pushed Successfully :github: :github-approved:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}